{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storagename": {
            "type": "string",
            "metadata": {
                "description": "This is storage account name"
            }
        },
        "location" : {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "This is resources location"
            }
        },

        "storagesku": {
            "type": "string",
            "defaultvalue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS",
                "Standard_GRS",
                "Premium_GRS"
            ]
        },

        "storagekind": {
            "type": "string",
            "defaultValue": "StorageV2"
        },

        "appserviceplan": {
            "type": "string"
        },

        "appname": {
            "type": "string",
            "metadata": {
                "description": "This is webapp name"
            }
        },

        "sqlservername": {
            "type": "string",
            "metadata": {
                "description": "This is database server name"
            }
        },

        "sqladminid": {
            "type": "string",
            "defaultValue": "azureadmin"
        },

        "sqladminpassword": {
            "type": "string",
            "defaultValue": "kamal@123456"
        },

        "sqldpname": {
            "type": "string",
            "defaultValue": "mydb0001",
            "metadata": {
                "description": "This is database name"
            }
        },

        "sqldbedition": {
            "type": "string",
            "defaultValue": "Basic"
        },

        "resourcetags": {
            "type": "object",
            "defaultValue": {
                "Environmentname": "Production",
                "Region": "EMEA",
                "Applicationowner": "Kamal"
            }
        },

        "vmName": {
            "type": "string",
            "defaultValue": "simpleLinuxVM",
            "metadata": {
                "description": "The name of virtual Machine"
            }
        },

        "adminUsername":{
            "type": "string",
            "metadata": {
                "description": "Username for the virtual machine"
            }
        },

         "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine."
            }
         },

        "adminPasswordOrKey": {
            "type": "secureString",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine"
            }
        },

        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "[toLower(format('simplelinuxvm-{0}',uniqueString(resourceGroup().id)))]",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine"
            }
        },

        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "20.04-LTS",
            "allowedValues": [
                "12.04.5-LTS",
                "14.04.5-LTS",
                "16.04.0-LTS",
                "20.04-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM"
            }
        },

        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "The size of VM"
            }
        },

        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "vNet",
            "metadata": {
                "description": "Name of VNET"
            }
        },

        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
                "description": "Name of subnet in the virtual network"
            }
        },

        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "secGroupNet",
            "metadata": {
                 "description": "Name of the Network Security Group"
            }
        }
    },

    "variables": {
        "uniquestoragename": "[concat(parameters('storagename'),uniqueString(resourceGroup().id))]",
        "uniqueappname": "[concat(parameters('appname'),uniqueString(resourceGroup().id))]",
        "uniqueappplanname": "[concat(parameters('appserviceplan'),uniqueString(resourceGroup().id))]",
        "uniquesqlname": "[concat(parameters('sqlservername'),uniqueString(resourceGroup().id))]",
        
        "publicIPAddressName": "[format('{0}PublicIP', parameters('vmName'))]",
         "networkInterfaceName": "[format('{0}NetInt', parameters('vmName'))]",
        "osDiskType": "StandardSSD_LRS",
        "subnetAddressPrefix": "10.1.0.0/24",
        "addressPrefix": "10.1.0.0/16",

        "linuxConfiguration": {
             "disablePasswordAuthentication": true,
             "ssh": {
                "publicKeys": [
                    {
                        "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                         "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
               }
        }      
    },

    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-08-01",
            "name": "[variables('uniquestoragename')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storagesku')]"
            },
            "kind": "[parameters('storagekind')]",
            "tags": "[parameters('resourcetags')]"
        },

        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-03-01",
            "location": "[parameters('location')]",
            "name": "[variables('uniqueappplanname')]",
            "sku": {
                "tier": "free",
                "name": "f1"
            },
            "tags": "[parameters('resourcetags')]"
        },

        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-03-01",
            "location": "[parameters('location')]",
            "name": "[variables('uniqueappname')]",
            "dependsOn": [
                "[variables('uniqueappplanname')]"
                ],
             "tags": "[parameters('resourcetags')]"   
        },

        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2014-04-01",
            "location": "[parameters('location')]",
            "name": "[variables('uniquesqlname')]",
            "properties": {
                "administratorLogin": "[parameters('sqladminid')]",
                "administratorLoginPassword": "[parameters('sqladminpassword')]",
                "version": "12.0"
            },
            "tags": "[parameters('resourcetags')]",

                "resources": [
                    {
                        "type": "databases",
                        "apiVersion": "2014-04-01",
                        "name": "[parameters('sqldpname')]",
                        "location": "[parameters('location')]",
                        "properties": {
                            "edition": "[parameters('sqldbedition')]"
                        },
                        "dependsOn": [
                            "[variables('uniquesqlname')]"
                        ],
                        "tags": "[parameters('resourcetags')]"
                }
            ]
        },

        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',parameters('virtualNetworkName'),parameters('subnetName'))]"
                            },
                         "privateIPAllocationMethod": "Dynamic",
                         "publicIPAddress": {
                             "id": "[resourceid('Microsoft.Network/publicIPAdresses',variables('publicIPAddressName'))]"
                         }
                        }    
                    }
                       
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters      ('networkSecurityGroupName'))]"
                 }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
            ]
        },    

            {
                "type": "Microsoft.Network/networkSecurityGroups",
                "apiVersion": "2020-06-01",
                "name": "[parameters('networkSecurityGroupName')]",
                "location": "[parameters('location')]",
                "properties": {
                    "securityRules": [
                        {
                            "name": "SSH",
                            "properties": {
                                "priority": 1000,
                                "protocol": "Tcp",
                                "access": "Allow",
                                "direction": "Inbound",
                                "sourceAddressPrefix": "*",
                                "sourcePortRange": "*",
                                "destinationAddressPrefix": "*",
                                "destinationPortRange": "22"
                                 }
                        }
                    ]
                }
            },

            {
                "type": "Microsoft.Network/virtualNetworks",
                "apiVersion": "2020-06-01",
                "name": "[parameters('virtualNetworkName')]",
                "location": "[parameters('location')]",
                "properties": {
                    "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                    }
                }
            },

            {
                "type": "Microsoft.Network/virtualNetworks/subnets",
                "apiVersion": "2020-06-01",
                "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('subnetName'))]",
                "properties": {
                    "addressPrefix": "[variables('subnetAddressPrefix')]",
                    "privateEndpointNetworkPolicies": "Enabled",
                    "privateLinkServiceNetworkPolicies": "Enabled"
                },
                 "dependsOn": [
                    "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
                ]
            },

            {
                "type": "Microsoft.Network/publicIPAddresses",
                "apiVersion": "2020-06-01",
                "name": "[variables('publicIPAddressName')]",
                "location": "[parameters('location')]",
                "sku": {
                    "name": "Basic"
                },
                "properties": {
                    "publicIPAllocationMethod": "Dynamic",
                    "publicIPAddressVersion": "IPv4",
                    "dnsSettings": {
                        "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                    },
                    "idleTimeoutInMinutes": 4
                }
            },

            {
                "type": "Microsoft.Compute/virtualMachines",
                "apiVersion": "2020-06-01",
                "name": "[parameters('vmName')]",
                "location": "[parameters('location')]",
                "properties": {
                    "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                    },
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "managedDisk": {
                                "storageAccountType": "[variables('osDiskType')]"
                            }
                        },
                        "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                         }
                    },
                    "networkProfile": {
                        "networkInterfaces": [
                            {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                            }
                        ]
                    },
                    "osProfile": {
                        "computerName": "[parameters('vmName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPasswordOrKey')]",
                        "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]"
                    }
                },
                 "dependsOn": [
                    "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                ]
            }
    ]
}